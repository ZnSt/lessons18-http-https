{"id":"js/4-weather.js","dependencies":[{"name":"/Users/privetsvuemlord/Documents/GitHub/Без названия/lessons18-http-https/package.json","includedInParent":true,"mtime":1621838968000}],"generated":{"js":"/*\r\n  Найти данные о текущей погоде в каком-то городе на weatherstack\r\n  Написать функцию getWeather, которая использует\r\n  API_URL + текущее значение input для составления запроса.\r\n  \r\n  Формат полного url таков:\r\n    http://api.weatherstack.com/current\r\n    ? access_key = YOUR_ACCESS_KEY\r\n    & query = New York \r\n    \r\n  Документация по Git API:\r\n    https://weatherstack.com/documentation\r\n    \r\n  С помощью fetch сделать запрос по составленому адресу. \r\n  Обязательно обработать вариант с ошибкой запроса используя catch - \"Your API request failed. Please try again or contact support.\" (сообщение приходит с АПИ)\r\n  \r\n  Результат запроса вывести в поле result в формате:\r\n    Город, страна\r\n    Дата время\r\n    Темпереатура\r\n    Описание погоды с картинкой\r\n  \r\n  Все необходимые данные есть в ответе от API.\r\n  Переписать фетч-функцию, используя класс URLSearchParams.\r\n  Проверять не пустой ли инпут.\r\n*/\n// const container = document.querySelector('#task-4');\n// const refs = {\n//   form: container.querySelector('.search-form'),\n//   result: container.querySelector('.result'),\n//   errorRef: container.querySelector('.error'),\n// };\n// const markupSample = `\n// <div>\n//   <h4>New York, United States of America</h4>\n//   <p>2019-09-07 08:14</p>\n//   <p>Current temperature: 13&degC</p>\n//   <p>Sunny<img class=\"logo\" src=\"https://assets.weatherstack.com/images/wsymbols01_png_64/wsymbol_0001_sunny.png\" alt=\"Sunny\" width=\"50\"></p>\n// </div>`;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"js/4-weather.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"js/4-weather.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"js/4-weather.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"js/4-weather.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"js/4-weather.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"js/4-weather.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"js/4-weather.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"js/4-weather.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"js/4-weather.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"js/4-weather.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"js/4-weather.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"js/4-weather.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"js/4-weather.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"js/4-weather.js","original":{"line":14,"column":0}},{"generated":{"line":15,"column":0},"source":"js/4-weather.js","original":{"line":15,"column":0}},{"generated":{"line":16,"column":0},"source":"js/4-weather.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"js/4-weather.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":0},"source":"js/4-weather.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"js/4-weather.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":0},"source":"js/4-weather.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"js/4-weather.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":0},"source":"js/4-weather.js","original":{"line":22,"column":0}},{"generated":{"line":23,"column":0},"source":"js/4-weather.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":0},"source":"js/4-weather.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":0},"source":"js/4-weather.js","original":{"line":25,"column":0}},{"generated":{"line":26,"column":0},"source":"js/4-weather.js","original":{"line":26,"column":0}},{"generated":{"line":27,"column":0},"source":"js/4-weather.js","original":{"line":28,"column":0}},{"generated":{"line":28,"column":0},"source":"js/4-weather.js","original":{"line":29,"column":0}},{"generated":{"line":29,"column":0},"source":"js/4-weather.js","original":{"line":30,"column":0}},{"generated":{"line":30,"column":0},"source":"js/4-weather.js","original":{"line":31,"column":0}},{"generated":{"line":31,"column":0},"source":"js/4-weather.js","original":{"line":32,"column":0}},{"generated":{"line":32,"column":0},"source":"js/4-weather.js","original":{"line":33,"column":0}},{"generated":{"line":33,"column":0},"source":"js/4-weather.js","original":{"line":35,"column":0}},{"generated":{"line":34,"column":0},"source":"js/4-weather.js","original":{"line":36,"column":0}},{"generated":{"line":35,"column":0},"source":"js/4-weather.js","original":{"line":37,"column":0}},{"generated":{"line":36,"column":0},"source":"js/4-weather.js","original":{"line":38,"column":0}},{"generated":{"line":37,"column":0},"source":"js/4-weather.js","original":{"line":39,"column":0}},{"generated":{"line":38,"column":0},"source":"js/4-weather.js","original":{"line":40,"column":0}},{"generated":{"line":39,"column":0},"source":"js/4-weather.js","original":{"line":41,"column":0}}],"sources":{"js/4-weather.js":"/*\r\n  Найти данные о текущей погоде в каком-то городе на weatherstack\r\n  Написать функцию getWeather, которая использует\r\n  API_URL + текущее значение input для составления запроса.\r\n  \r\n  Формат полного url таков:\r\n    http://api.weatherstack.com/current\r\n    ? access_key = YOUR_ACCESS_KEY\r\n    & query = New York \r\n    \r\n  Документация по Git API:\r\n    https://weatherstack.com/documentation\r\n    \r\n  С помощью fetch сделать запрос по составленому адресу. \r\n  Обязательно обработать вариант с ошибкой запроса используя catch - \"Your API request failed. Please try again or contact support.\" (сообщение приходит с АПИ)\r\n  \r\n  Результат запроса вывести в поле result в формате:\r\n    Город, страна\r\n    Дата время\r\n    Темпереатура\r\n    Описание погоды с картинкой\r\n  \r\n  Все необходимые данные есть в ответе от API.\r\n  Переписать фетч-функцию, используя класс URLSearchParams.\r\n  Проверять не пустой ли инпут.\r\n*/\r\n\r\n// const container = document.querySelector('#task-4');\r\n// const refs = {\r\n//   form: container.querySelector('.search-form'),\r\n//   result: container.querySelector('.result'),\r\n//   errorRef: container.querySelector('.error'),\r\n// };\r\n\r\n// const markupSample = `\r\n// <div>\r\n//   <h4>New York, United States of America</h4>\r\n//   <p>2019-09-07 08:14</p>\r\n//   <p>Current temperature: 13&degC</p>\r\n//   <p>Sunny<img class=\"logo\" src=\"https://assets.weatherstack.com/images/wsymbols01_png_64/wsymbol_0001_sunny.png\" alt=\"Sunny\" width=\"50\"></p>\r\n// </div>`;\r\n"},"lineCount":null}},"error":null,"hash":"9fbe5faca14d18bed6dcc2a8572e4669","cacheData":{"env":{}}}